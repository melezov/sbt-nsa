Usage: scalac <options> <source files>

-- Notes on option parsing --
Boolean settings are always false unless set.
Where multiple values are accepted, they should be comma-separated.
  example: -Xplugin:plugin1,plugin2
<phases> means one or a comma-separated list of:
  (partial) phase names, phase ids, phase id ranges, or the string "all".
  example: -Xprint:all prints all phases.
  example: -Xprint:expl,24-26 prints phases explicitouter, closelim, dce, jvm.
  example: -Xprint:-4 prints only the phases up to typer.

Possible private options include:
  -Ybrowse:<phases>                   Browse the abstract syntax tree after <phases>
  -Ycheck:<phases>                    Check the tree at the end of <phases>
  -Yclosure-elim                      Perform closure elimination.
  -Ycompact-trees                     Use compact tree printer when displaying trees.
  -Ydead-code                         Perform dead code elimination.
  -Ydebug                             Increase the quantity of debugging output.
  -Ydump-classes <dir>                Dump the generated bytecode to .class files (useful for reflective compilation that utilizes in-memory classloaders).
  -Yeta-expand-keeps-star             Eta-expand varargs methods to T* rather than Seq[T].  This is a temporary option to ease transition.
  -Ygen-javap <dir>                   Generate a parallel output directory of .javap files.
  -Yinfer-argument-types              Infer types for arguments of overriden methods.
  -Yinline                            Perform inlining when possible.
  -Yinline-handlers                   Perform exception handler inlining when possible.
  -Yinline-warnings                   Emit inlining warnings. (Normally surpressed due to high volume)
  -Yinvalidate <classpath-entry>      Invalidate classpath entry before run
  -Ylinearizer:<which>                Linearizer to use (normal,dfs,rpo,dump) default:rpo
  -Ylog:<phases>                      Log operations during <phases>
  -Ylog-classpath                     Output information about what classpath is being applied.
  -Ymacro-debug-lite                  Trace essential macro-related activities.
  -Ymacro-debug-verbose               Trace all macro-related activities: compilation, generation of synthetics, classloading, expansion, exceptions.
  -Ymacro-no-expand                   Don't expand macros. Might be useful for scaladoc and presentation compiler, but will crash anything which uses macros and gets past typer.
  -Yno-adapted-args                   Do not adapt an argument list (either by inserting () or creating a tuple) to match the receiver.
  -Yno-completion                     Disable tab-completion in the REPL.
  -Yno-generic-signatures             Suppress generation of generic signatures for Java.
  -Yno-imports                        Compile without importing scala.*, java.lang.*, or Predef.
  -Yno-predef                         Compile without importing Predef.
  -Yno-self-type-checks               Suppress check for self-type conformance among inherited members.
  -Yno-squeeze                        Disable creation of compact code in matching.
  -Ynotnull                           Enable (experimental and incomplete) scala.NotNull.
  -Yoverride-objects                  Allow member objects to be overridden.
  -Yoverride-vars                     Allow vars to be overridden.
  -Ypresentation-delay <n>            Wait number of ms after typing before starting typechecking
  -Ypresentation-log <file>           Log presentation compiler events into file
  -Ypresentation-replay <file>        Replay presentation compiler events from file
  -Ypresentation-strict               Do not report type errors in sources with syntax errors.
  -Ypresentation-verbose              Print information about presentation compiler tasks.
  -Yrangepos                          Use range positions for syntax trees.
  -Yrecursion <n>                     Set recursion depth used when locking symbols.
  -Yreify-copypaste                   Dump the reified trees in copypasteable representation.
  -Yrepl-sync                         Do not use asynchronous code for repl startup
  -Yresolve-term-conflict:<strategy>  Resolve term conflicts (package,object,error) default:error
  -Yself-in-annots                    Include a "self" identifier inside of annotations.
  -Yshow:<phases>                     (Requires -Xshow-class or -Xshow-object) Show after <phases>
  -Yshow-symkinds                     Print abbreviated symbol kinds next to symbol names.
  -Yshow-syms                         Print the AST symbol hierarchy after each phase.
  -Yshow-trees                        (Requires -Xprint:) Print detailed ASTs in formatted form.
  -Yshow-trees-compact                (Requires -Xprint:) Print detailed ASTs in compact form.
  -Yshow-trees-stringified            (Requires -Xprint:) Print stringifications along with detailed ASTs.
  -Yskip:<phases>                     Skip <phases>
  -Ystatistics                        Print compiler statistics.
  -Ystop-after:<phases>               Stop after <phases>
  -Ystop-before:<phases>              Stop before <phases>
  -Ystruct-dispatch:<policy>          structural method dispatch policy (no-cache,mono-cache,poly-cache,invoke-dynamic) default:poly-cache
  -Ywarn-adapted-args                 Warn if an argument list is modified to match the receiver.
  -Ywarn-all                          Enable all -Y warnings.
  -Ywarn-dead-code                    Warn when dead code is identified.
  -Ywarn-inaccessible                 Warn about inaccessible types in method signatures.
  -Ywarn-nullary-override             Warn when non-nullary overrides nullary, e.g. `def foo()` over `def foo`.
  -Ywarn-nullary-unit                 Warn when nullary methods return Unit.
  -Ywarn-numeric-widen                Warn when numerics are widened.
  -Ywarn-value-discard                Warn when non-Unit expression results are unused.

Additional debug settings:
  -Ybuild-manager-debug               Generate debug information for the Refined Build Manager compiler.
  -Ybuilder-debug:<manager>           Compile using the specified build manager. (none,refined,simple) default:none
  -Ycompletion-debug                  Trace all tab completion activity.
  -Ydoc-debug                         Trace all scaladoc activity.
  -Yide-debug                         Generate, validate and output trees using the interactive compiler.
  -Yinfer-debug                       Trace type inference and implicit search.
  -Yissue-debug                       Print stack traces when a context issues an error.
  -Ypatmat-debug                      Trace pattern matching translation.
  -Ypmat-debug                        Trace all pattern matcher activity.
  -Ypos-debug                         Trace position validation.
  -Ypresentation-debug                Enable debugging output for the presentation compiler.
  -Yreify-debug                       Trace reification.
  -Yrepl-debug                        Trace all repl activity.
  -Ytyper-debug                       Trace all type assignments.
